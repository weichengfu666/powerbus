; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_led.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -IC:\Users\17830\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\17830\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=536 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\flash\obj\bsp_led.crf ..\..\User\bsp\src\bsp_led.c]
                          THUMB

                          AREA ||i.bsp_InitLed||, CODE, READONLY, ALIGN=2

                  bsp_InitLed PROC
;;;48     */
;;;49     void bsp_InitLed(void)
000000  b508              PUSH     {r3,lr}
;;;50     {
;;;51     	GPIO_InitTypeDef GPIO_InitStructure;
;;;52     
;;;53     	/* 打开GPIO时钟 */
;;;54     	RCC_APB2PeriphClockCmd(RCC_ALL_LED, ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;55     
;;;56     	/*
;;;57     		配置所有的LED指示灯GPIO为推挽输出模式
;;;58     		由于将GPIO设置为输出时，GPIO输出寄存器的值缺省是0，因此会驱动LED点亮.
;;;59     		这是我不希望的，因此在改变GPIO为输出前，先关闭LED指示灯
;;;60     	*/
;;;61     	bsp_LedOff(1);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       bsp_LedOff
;;;62     	bsp_LedOff(2);
000010  2002              MOVS     r0,#2
000012  f7fffffe          BL       bsp_LedOff
;;;63     	bsp_LedOff(3);
000016  2003              MOVS     r0,#3
000018  f7fffffe          BL       bsp_LedOff
;;;64     
;;;65     
;;;66     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00001c  2003              MOVS     r0,#3
00001e  f88d0002          STRB     r0,[sp,#2]
;;;67     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000022  2010              MOVS     r0,#0x10
000024  f88d0003          STRB     r0,[sp,#3]
;;;68     	
;;;69     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED1;
000028  2008              MOVS     r0,#8
00002a  f8ad0000          STRH     r0,[sp,#0]
;;;70     	GPIO_Init(GPIO_PORT_LED1, &GPIO_InitStructure);
00002e  4669              MOV      r1,sp
000030  4808              LDR      r0,|L1.84|
000032  f7fffffe          BL       GPIO_Init
;;;71     
;;;72     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED2;
000036  2010              MOVS     r0,#0x10
000038  f8ad0000          STRH     r0,[sp,#0]
;;;73     	GPIO_Init(GPIO_PORT_LED2, &GPIO_InitStructure);
00003c  4669              MOV      r1,sp
00003e  4805              LDR      r0,|L1.84|
000040  f7fffffe          BL       GPIO_Init
;;;74     
;;;75     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED3;
000044  2020              MOVS     r0,#0x20
000046  f8ad0000          STRH     r0,[sp,#0]
;;;76     	GPIO_Init(GPIO_PORT_LED3, &GPIO_InitStructure);
00004a  4669              MOV      r1,sp
00004c  4801              LDR      r0,|L1.84|
00004e  f7fffffe          BL       GPIO_Init
;;;77     }
000052  bd08              POP      {r3,pc}
;;;78     
                          ENDP

                  |L1.84|
                          DCD      0x40010c00

                          AREA ||i.bsp_IsLedOn||, CODE, READONLY, ALIGN=2

                  bsp_IsLedOn PROC
;;;158    */
;;;159    uint8_t bsp_IsLedOn(uint8_t _no)
000000  4601              MOV      r1,r0
;;;160    {
;;;161    	if (_no == 1)
000002  2901              CMP      r1,#1
000004  d108              BNE      |L2.24|
;;;162    	{
;;;163    		if ((GPIO_PORT_LED1->ODR & GPIO_PIN_LED1) == 0)
000006  4810              LDR      r0,|L2.72|
000008  6800              LDR      r0,[r0,#0]
00000a  f0000008          AND      r0,r0,#8
00000e  b908              CBNZ     r0,|L2.20|
;;;164    		{
;;;165    			return 1;
000010  2001              MOVS     r0,#1
                  |L2.18|
;;;166    		}
;;;167    		return 0;
;;;168    	}
;;;169    	else if (_no == 2)
;;;170    	{
;;;171    		if ((GPIO_PORT_LED2->ODR & GPIO_PIN_LED2) == 0)
;;;172    		{
;;;173    			return 1;
;;;174    		}
;;;175    		return 0;
;;;176    	}
;;;177    	else if (_no == 3)
;;;178    	{
;;;179    		if ((GPIO_PORT_LED3->ODR & GPIO_PIN_LED3) == 0)
;;;180    		{
;;;181    			return 1;
;;;182    		}
;;;183    		return 0;
;;;184    	}
;;;185    
;;;186    	return 0;
;;;187    }
000012  4770              BX       lr
                  |L2.20|
000014  2000              MOVS     r0,#0                 ;167
000016  e7fc              B        |L2.18|
                  |L2.24|
000018  2902              CMP      r1,#2                 ;169
00001a  d108              BNE      |L2.46|
00001c  480a              LDR      r0,|L2.72|
00001e  6800              LDR      r0,[r0,#0]            ;171
000020  f0000010          AND      r0,r0,#0x10           ;171
000024  b908              CBNZ     r0,|L2.42|
000026  2001              MOVS     r0,#1                 ;173
000028  e7f3              B        |L2.18|
                  |L2.42|
00002a  2000              MOVS     r0,#0                 ;175
00002c  e7f1              B        |L2.18|
                  |L2.46|
00002e  2903              CMP      r1,#3                 ;177
000030  d108              BNE      |L2.68|
000032  4805              LDR      r0,|L2.72|
000034  6800              LDR      r0,[r0,#0]            ;179
000036  f0000020          AND      r0,r0,#0x20           ;179
00003a  b908              CBNZ     r0,|L2.64|
00003c  2001              MOVS     r0,#1                 ;181
00003e  e7e8              B        |L2.18|
                  |L2.64|
000040  2000              MOVS     r0,#0                 ;183
000042  e7e6              B        |L2.18|
                  |L2.68|
000044  2000              MOVS     r0,#0                 ;186
000046  e7e4              B        |L2.18|
;;;188    
                          ENDP

                  |L2.72|
                          DCD      0x40010c0c

                          AREA ||i.bsp_LedOff||, CODE, READONLY, ALIGN=2

                  bsp_LedOff PROC
;;;110    */
;;;111    void bsp_LedOff(uint8_t _no)
000000  2801              CMP      r0,#1
;;;112    {
;;;113    	if (_no == 1)
000002  d103              BNE      |L3.12|
;;;114    	{
;;;115    		GPIO_PORT_LED1->BSRR = GPIO_PIN_LED1;
000004  2108              MOVS     r1,#8
000006  4a07              LDR      r2,|L3.36|
000008  6011              STR      r1,[r2,#0]
00000a  e00a              B        |L3.34|
                  |L3.12|
;;;116    	}
;;;117    	else if (_no == 2)
00000c  2802              CMP      r0,#2
00000e  d103              BNE      |L3.24|
;;;118    	{
;;;119    		GPIO_PORT_LED2->BSRR = GPIO_PIN_LED2;
000010  2110              MOVS     r1,#0x10
000012  4a04              LDR      r2,|L3.36|
000014  6011              STR      r1,[r2,#0]
000016  e004              B        |L3.34|
                  |L3.24|
;;;120    	}
;;;121    	else if (_no == 3)
000018  2803              CMP      r0,#3
00001a  d102              BNE      |L3.34|
;;;122    	{
;;;123    		GPIO_PORT_LED3->BSRR = GPIO_PIN_LED3;
00001c  2120              MOVS     r1,#0x20
00001e  4a01              LDR      r2,|L3.36|
000020  6011              STR      r1,[r2,#0]
                  |L3.34|
;;;124    	}
;;;125    }
000022  4770              BX       lr
;;;126    
                          ENDP

                  |L3.36|
                          DCD      0x40010c10

                          AREA ||i.bsp_LedOn||, CODE, READONLY, ALIGN=2

                  bsp_LedOn PROC
;;;86     */
;;;87     void bsp_LedOn(uint8_t _no)
000000  2801              CMP      r0,#1
;;;88     {
;;;89     	if (_no == 1)
000002  d103              BNE      |L4.12|
;;;90     	{
;;;91     		GPIO_PORT_LED1->BRR = GPIO_PIN_LED1;
000004  2108              MOVS     r1,#8
000006  4a07              LDR      r2,|L4.36|
000008  6011              STR      r1,[r2,#0]
00000a  e00a              B        |L4.34|
                  |L4.12|
;;;92     	}
;;;93     	else if (_no == 2)
00000c  2802              CMP      r0,#2
00000e  d103              BNE      |L4.24|
;;;94     	{
;;;95     		GPIO_PORT_LED2->BRR = GPIO_PIN_LED2;
000010  2110              MOVS     r1,#0x10
000012  4a04              LDR      r2,|L4.36|
000014  6011              STR      r1,[r2,#0]
000016  e004              B        |L4.34|
                  |L4.24|
;;;96     	}
;;;97     	else if (_no == 3)
000018  2803              CMP      r0,#3
00001a  d102              BNE      |L4.34|
;;;98     	{
;;;99     		GPIO_PORT_LED3->BRR = GPIO_PIN_LED3;
00001c  2120              MOVS     r1,#0x20
00001e  4a01              LDR      r2,|L4.36|
000020  6011              STR      r1,[r2,#0]
                  |L4.34|
;;;100    	}
;;;101    }
000022  4770              BX       lr
;;;102    
                          ENDP

                  |L4.36|
                          DCD      0x40010c14

                          AREA ||i.bsp_LedToggle||, CODE, READONLY, ALIGN=2

                  bsp_LedToggle PROC
;;;134    */
;;;135    void bsp_LedToggle(uint8_t _no)
000000  2801              CMP      r0,#1
;;;136    {
;;;137    	if (_no == 1)
000002  d106              BNE      |L5.18|
;;;138    	{
;;;139    		GPIO_PORT_LED1->ODR ^= GPIO_PIN_LED1;
000004  490c              LDR      r1,|L5.56|
000006  6809              LDR      r1,[r1,#0]
000008  f0810108          EOR      r1,r1,#8
00000c  4a0a              LDR      r2,|L5.56|
00000e  6011              STR      r1,[r2,#0]
000010  e010              B        |L5.52|
                  |L5.18|
;;;140    	}
;;;141    	else if (_no == 2)
000012  2802              CMP      r0,#2
000014  d106              BNE      |L5.36|
;;;142    	{
;;;143    		GPIO_PORT_LED2->ODR ^= GPIO_PIN_LED2;
000016  4908              LDR      r1,|L5.56|
000018  6809              LDR      r1,[r1,#0]
00001a  f0810110          EOR      r1,r1,#0x10
00001e  4a06              LDR      r2,|L5.56|
000020  6011              STR      r1,[r2,#0]
000022  e007              B        |L5.52|
                  |L5.36|
;;;144    	}
;;;145    	else if (_no == 3)
000024  2803              CMP      r0,#3
000026  d105              BNE      |L5.52|
;;;146    	{
;;;147    		GPIO_PORT_LED3->ODR ^= GPIO_PIN_LED3;
000028  4903              LDR      r1,|L5.56|
00002a  6809              LDR      r1,[r1,#0]
00002c  f0810120          EOR      r1,r1,#0x20
000030  4a01              LDR      r2,|L5.56|
000032  6011              STR      r1,[r2,#0]
                  |L5.52|
;;;148    	}
;;;149    }
000034  4770              BX       lr
;;;150    
                          ENDP

000036  0000              DCW      0x0000
                  |L5.56|
                          DCD      0x40010c0c

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_led.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_led_c_ba23b041____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REVSH|
#line 128
|__asm___9_bsp_led_c_ba23b041____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
